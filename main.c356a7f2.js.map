{"version":3,"sources":["scripts/main.js"],"names":["liList","document","querySelectorAll","ulList","querySelector","sortList","list","sorted","sort","a","b","dataset","salary","split","join","append","getEmployees","map","person","name","innerText"],"mappings":";AAAA,aAqBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnBA,IAAMA,EAASC,SAASC,iBAAiB,MACnCC,EAASF,SAASG,cAAc,MAEtC,SAASC,EAASC,GACVC,IAAAA,EAAS,EAAID,GAAME,KAAK,SAACC,EAAGC,GAChC,OAAEA,EAAEC,QAAQC,OAAOC,MAAM,KAAKC,KAAK,IAAID,MAAM,KAAKC,KAAK,KACnDL,EAAEE,QAAQC,OAAOC,MAAM,KAAKC,KAAK,IAAID,MAAM,KAAKC,KAAK,MAE3DX,EAAOY,OAAPZ,MAAAA,EAAiBI,EAAAA,IAGnB,SAASS,EAAaV,GACb,OAAA,EAAIA,GAAMW,IAAI,SAAAC,GAAM,OAAA,EAAA,CACzBC,KAAMD,EAAOE,WACVF,EAAOP,WAIdN,EAASL,GACTgB,EAAahB","file":"main.c356a7f2.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst liList = document.querySelectorAll('li');\nconst ulList = document.querySelector('ul');\n\nfunction sortList(list) {\n  const sorted = [...list].sort((a, b) =>\n    +(b.dataset.salary.split('$').join('').split(',').join(''))\n    - +(a.dataset.salary.split('$').join('').split(',').join('')));\n\n  ulList.append(...sorted);\n}\n\nfunction getEmployees(list) {\n  return [...list].map(person => ({\n    name: person.innerText,\n    ...person.dataset,\n  }));\n}\n\nsortList(liList);\ngetEmployees(liList);\n"]}